"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Method = {
    get: 'get',
    post: 'post',
    put: 'put',
    delete: 'delete'
};
var Restful = (function () {
    function Restful(url) {
        this.post = exports.Method.post + ' ' + url;
        this.delete = exports.Method.delete + ' ' + url + '/{id}';
        this.put = exports.Method.put + ' ' + url;
        this.get = url + '/{id}';
        this.query = url;
    }
    return Restful;
}());
exports.Restful = Restful;
exports.Apis = {
    area: {
        restful: new Restful('area'),
        queryCity: 'area/city'
    },
    nbhd: {
        restful: new Restful('neighbor'),
        queryArea: 'neighbor/area',
        queryLngLat: 'neighbor/lnglat'
    },
    shop: {
        queryNbhd: 'shop/byNbhd',
        goods: new Restful('shop/goods'),
        queryCate: 'shop/goods/cate/byShop',
        queryGoodsByCate: 'shop/goods/byShopAndCate',
        queryGoodsByAddress: 'shop/byAddressWithGoods',
    },
    cate: {
        queryCate: 'category/tree',
    },
    banner: {
        queryBanner: 'banner/byNbhd',
    },
    rec: {
        restful: new Restful('recommendGoods'),
        queryOfMy: 'recommendGoods/my',
    },
    hot: {
        restful: new Restful('hotGoods'),
        queryOfNbhd: 'hotGoods/byNbhd',
    },
    cart: {
        restful: new Restful('shoppingcart'),
        queryOfMy: 'shoppingcart/my',
    },
    goods: {
        restful: new Restful('goods'),
        queryByCate: 'goods/byCate',
    },
    order: {
        restful: new Restful('order'),
        queryOfMy: 'order/my',
        payment: "post order/pay/wx"
    },
    addr: {
        restful: new Restful('address'),
        queryOfMy: 'address/my',
    },
    auth: {
        login: 'auth/login/wx',
        refresh: 'auth/refresh'
    },
    user: {
        restful: new Restful('user')
    }
};

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS9hcGkuY29uc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDYSxRQUFBLE1BQU0sR0FBRztJQUNsQixHQUFHLEVBQUUsS0FBSztJQUNWLElBQUksRUFBRSxNQUFNO0lBQ1osR0FBRyxFQUFFLEtBQUs7SUFDVixNQUFNLEVBQUUsUUFBUTtDQUNqQixDQUFBO0FBRUg7SUFPSSxpQkFBWSxHQUFXO1FBQ25CLElBQUksQ0FBQyxJQUFJLEdBQUcsY0FBTSxDQUFDLElBQUksR0FBRyxHQUFHLEdBQUcsR0FBRyxDQUFBO1FBQ25DLElBQUksQ0FBQyxNQUFNLEdBQUcsY0FBTSxDQUFDLE1BQU0sR0FBRyxHQUFHLEdBQUcsR0FBRyxHQUFHLE9BQU8sQ0FBQTtRQUNqRCxJQUFJLENBQUMsR0FBRyxHQUFHLGNBQU0sQ0FBQyxHQUFHLEdBQUcsR0FBRyxHQUFHLEdBQUcsQ0FBQTtRQUNqQyxJQUFJLENBQUMsR0FBRyxHQUFHLEdBQUcsR0FBRyxPQUFPLENBQUE7UUFDeEIsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUE7SUFDcEIsQ0FBQztJQUNMLGNBQUM7QUFBRCxDQWRBLEFBY0MsSUFBQTtBQWRZLDBCQUFPO0FBZ0JQLFFBQUEsSUFBSSxHQUFHO0lBQ2hCLElBQUksRUFBRTtRQUNGLE9BQU8sRUFBRSxJQUFJLE9BQU8sQ0FBQyxNQUFNLENBQUM7UUFDNUIsU0FBUyxFQUFFLFdBQVc7S0FDdEI7SUFDRixJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsSUFBSSxPQUFPLENBQUMsVUFBVSxDQUFDO1FBQ2hDLFNBQVMsRUFBRSxlQUFlO1FBQzFCLFdBQVcsRUFBRSxpQkFBaUI7S0FDL0I7SUFDRCxJQUFJLEVBQUU7UUFDSixTQUFTLEVBQUUsYUFBYTtRQUN4QixLQUFLLEVBQUUsSUFBSSxPQUFPLENBQUMsWUFBWSxDQUFDO1FBQ2hDLFNBQVMsRUFBRSx3QkFBd0I7UUFDbkMsZ0JBQWdCLEVBQUUsMEJBQTBCO1FBQzVDLG1CQUFtQixFQUFFLHlCQUF5QjtLQUMvQztJQUNELElBQUksRUFBRTtRQUNKLFNBQVMsRUFBRSxlQUFlO0tBQzNCO0lBQ0QsTUFBTSxFQUFFO1FBQ04sV0FBVyxFQUFFLGVBQWU7S0FDN0I7SUFDRCxHQUFHLEVBQUU7UUFDSCxPQUFPLEVBQUUsSUFBSSxPQUFPLENBQUMsZ0JBQWdCLENBQUM7UUFDdEMsU0FBUyxFQUFFLG1CQUFtQjtLQUMvQjtJQUNELEdBQUcsRUFBRTtRQUNILE9BQU8sRUFBRSxJQUFJLE9BQU8sQ0FBQyxVQUFVLENBQUM7UUFDaEMsV0FBVyxFQUFFLGlCQUFpQjtLQUMvQjtJQUNELElBQUksRUFBRTtRQUNKLE9BQU8sRUFBRSxJQUFJLE9BQU8sQ0FBQyxjQUFjLENBQUM7UUFDcEMsU0FBUyxFQUFFLGlCQUFpQjtLQUM3QjtJQUNELEtBQUssRUFBRTtRQUNMLE9BQU8sRUFBRSxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUM7UUFDN0IsV0FBVyxFQUFFLGNBQWM7S0FDNUI7SUFDRCxLQUFLLEVBQUU7UUFDTCxPQUFPLEVBQUUsSUFBSSxPQUFPLENBQUMsT0FBTyxDQUFDO1FBQzdCLFNBQVMsRUFBRSxVQUFVO1FBQ3JCLE9BQU8sRUFBRSxtQkFBbUI7S0FDN0I7SUFDRCxJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsSUFBSSxPQUFPLENBQUMsU0FBUyxDQUFDO1FBQy9CLFNBQVMsRUFBRSxZQUFZO0tBQ3hCO0lBQ0QsSUFBSSxFQUFFO1FBQ0osS0FBSyxFQUFFLGVBQWU7UUFDdEIsT0FBTyxFQUFFLGNBQWM7S0FDeEI7SUFDRCxJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsSUFBSSxPQUFPLENBQUMsTUFBTSxDQUFDO0tBQzdCO0NBQ04sQ0FBQSIsImZpbGUiOiJhcGkvYXBpLmNvbnN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmV4cG9ydCBjb25zdCBNZXRob2QgPSB7XHJcbiAgICBnZXQ6ICdnZXQnLFxyXG4gICAgcG9zdDogJ3Bvc3QnLFxyXG4gICAgcHV0OiAncHV0JyxcclxuICAgIGRlbGV0ZTogJ2RlbGV0ZSdcclxuICB9XHJcblxyXG5leHBvcnQgY2xhc3MgUmVzdGZ1bCB7XHJcbiAgICBwb3N0OiBzdHJpbmc7XHJcbiAgICBkZWxldGU6IHN0cmluZztcclxuICAgIHB1dDogc3RyaW5nO1xyXG4gICAgZ2V0OiBzdHJpbmc7XHJcbiAgICBxdWVyeTogc3RyaW5nO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHVybDogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5wb3N0ID0gTWV0aG9kLnBvc3QgKyAnICcgKyB1cmxcclxuICAgICAgICB0aGlzLmRlbGV0ZSA9IE1ldGhvZC5kZWxldGUgKyAnICcgKyB1cmwgKyAnL3tpZH0nXHJcbiAgICAgICAgdGhpcy5wdXQgPSBNZXRob2QucHV0ICsgJyAnICsgdXJsXHJcbiAgICAgICAgdGhpcy5nZXQgPSB1cmwgKyAnL3tpZH0nXHJcbiAgICAgICAgdGhpcy5xdWVyeSA9IHVybFxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgQXBpcyA9IHtcclxuICAgIGFyZWE6IHsgXHJcbiAgICAgICAgcmVzdGZ1bDogbmV3IFJlc3RmdWwoJ2FyZWEnKSwgIC8vIOiOt+WPluWMuuWfn+S/oeaBr1xyXG4gICAgICAgIHF1ZXJ5Q2l0eTogJ2FyZWEvY2l0eScgIC8vIOiOt+WPluaJgOacieWfjuW4guS/oeaBryAgXHJcbiAgICAgICB9LCAgICAgICAgICAgXHJcbiAgICAgIG5iaGQ6IHsgXHJcbiAgICAgICAgcmVzdGZ1bDogbmV3IFJlc3RmdWwoJ25laWdoYm9yJyksXHJcbiAgICAgICAgcXVlcnlBcmVhOiAnbmVpZ2hib3IvYXJlYScsICAgLy8g6I635Y+W5omA5Zyo5Yy65Z+f55qE56S+5Yy65YiX6KGoIOWPguaVsHtwaToxLCBwczoyMCxhcmVhaWQ6XCJBMDAxNlwifVxyXG4gICAgICAgIHF1ZXJ5TG5nTGF0OiAnbmVpZ2hib3IvbG5nbGF0JyAvLyDmn6Xor6Lnu4/nuqzluqbpmYTov5HnmoTnpL7ljLrliJfooahcclxuICAgICAgfSxcclxuICAgICAgc2hvcDogeyBcclxuICAgICAgICBxdWVyeU5iaGQ6ICdzaG9wL2J5TmJoZCcsICAgICAgICAgLy8g6I635Y+W5omA5Zyo56S+5Yy655qE6Zeo5bqXIOWPguaVsHtwYWdlSW5kZXg6MSwgcGFnZVNpemU6MTAsaWQ6XCJOMDAwXCIsbG5nOlwiMjIuNjM0ODkyODg4OVwiLCAgbGF0OlwiMTE0LjAzMjEzMjkwMThcIn3npL7ljLppZO+8jOe7j+e6rOW6plxyXG4gICAgICAgIGdvb2RzOiBuZXcgUmVzdGZ1bCgnc2hvcC9nb29kcycpLCAgICAgICAgLy8g6I635Y+W6K+l6Zeo5bqX5Y2V5Liq5ZWG5ZOB5L+h5oGvIOWPguaVsCB7aWQ6IFwiU0cwMDAwXCJ9IOmXqOW6l+WVhuWTgWlkXHJcbiAgICAgICAgcXVlcnlDYXRlOiAnc2hvcC9nb29kcy9jYXRlL2J5U2hvcCcsICAgLy8g6I635Y+W6K+l6Zeo5bqX55qE5ZWG5ZOB5omA5pyJ57G75YirIOWPguaVsCB7c2hvcDogXCJTMDAwMFwifSDpl6jlupdpZFxyXG4gICAgICAgIHF1ZXJ5R29vZHNCeUNhdGU6ICdzaG9wL2dvb2RzL2J5U2hvcEFuZENhdGUnLCAgLy8g6I635Y+W6Zeo5bqX6K+l57G75Yir55qE5ZWG5ZOBIOWPguaVsHtwaToxLCBwczoxMCxzaG9wOlwiUzAwMDBcIixjYXRlOlwiQzAwMDFcIn3pl6jlupdpZO+8jOexu+WIq2lkXHJcbiAgICAgICAgcXVlcnlHb29kc0J5QWRkcmVzczogJ3Nob3AvYnlBZGRyZXNzV2l0aEdvb2RzJyxcclxuICAgICAgfSxcclxuICAgICAgY2F0ZToge1xyXG4gICAgICAgIHF1ZXJ5Q2F0ZTogJ2NhdGVnb3J5L3RyZWUnLCAgIC8vIOiOt+WPluaJgOacieWVhuWTgeexu+WIq1xyXG4gICAgICB9LFxyXG4gICAgICBiYW5uZXI6IHtcclxuICAgICAgICBxdWVyeUJhbm5lcjogJ2Jhbm5lci9ieU5iaGQnLCAgLy8g6I635Y+W5omA5Zyo56S+5Yy66aaW6aG1YmFubmVyIOWPguaVsHtwYWdlSW5kZXg6IDEscGFnZVNpemU6IDMsIGlkOiBcIk4wMDBcIn0g56S+5Yy6aWRcclxuICAgICAgfSxcclxuICAgICAgcmVjOiB7XHJcbiAgICAgICAgcmVzdGZ1bDogbmV3IFJlc3RmdWwoJ3JlY29tbWVuZEdvb2RzJyksXHJcbiAgICAgICAgcXVlcnlPZk15OiAncmVjb21tZW5kR29vZHMvbXknLCAgICAgICAgICAgIC8vIOaIkeeahOaOqOiNkOWVhuWTgSDlj4LmlbB7cGFnZUluZGV4OiAxLCBwYWdlU2l6ZTogMywgdWlkOiBcIlUwMDAwMDAwMFwiLCBuaWQ6IFwiTjAwMFwifSDnlKjmiLdpZO+8jOekvuWMumlkXHJcbiAgICAgIH0sXHJcbiAgICAgIGhvdDoge1xyXG4gICAgICAgIHJlc3RmdWw6IG5ldyBSZXN0ZnVsKCdob3RHb29kcycpLFxyXG4gICAgICAgIHF1ZXJ5T2ZOYmhkOiAnaG90R29vZHMvYnlOYmhkJywgICAgICAgICAgICAgICAgLy8g56S+5Yy65YaF54Ot5Y2W5ZWG5ZOBIOWPguaVsHtwaTogMSxwczogMywgbmJoZDogXCJOMDAwXCJ9IOekvuWMumlkXHJcbiAgICAgIH0sXHJcbiAgICAgIGNhcnQ6IHtcclxuICAgICAgICByZXN0ZnVsOiBuZXcgUmVzdGZ1bCgnc2hvcHBpbmdjYXJ0JyksXHJcbiAgICAgICAgcXVlcnlPZk15OiAnc2hvcHBpbmdjYXJ0L215JywgICAgICAvLyDojrflj5bmiJHnmoTotK3nianovaYg5Y+C5pWwe3BhZ2VJbmRleDogMSwgcGFnZVNpemU6IDMsIHVpZDogXCJVMDAwMDAwMDBcIn0g55So5oi3aWRcclxuICAgICAgfSxcclxuICAgICAgZ29vZHM6IHtcclxuICAgICAgICByZXN0ZnVsOiBuZXcgUmVzdGZ1bCgnZ29vZHMnKSxcclxuICAgICAgICBxdWVyeUJ5Q2F0ZTogJ2dvb2RzL2J5Q2F0ZScsICAgICAgICAgICAgICAgICAgIC8vIOagueaNruexu+WIq+iOt+WPluWVhuWTgeS/oeaBryDlj4LmlbB7cGFnZUluZGV4OiAxLCBwYWdlU2l6ZTogMjAsIGNhdGU6XCJDMDAyNVwifVxyXG4gICAgICB9LFxyXG4gICAgICBvcmRlcjoge1xyXG4gICAgICAgIHJlc3RmdWw6IG5ldyBSZXN0ZnVsKCdvcmRlcicpLFxyXG4gICAgICAgIHF1ZXJ5T2ZNeTogJ29yZGVyL215JywgICAgICAgICAgICAgICAgICAgICAvLyDojrflj5bmiJHnmoTorqLljZXkv6Hmga/lj4LmlbB7cGk6IDEsIHBzOiAyMCx1aWQ6fVxyXG4gICAgICAgIHBheW1lbnQ6IFwicG9zdCBvcmRlci9wYXkvd3hcIiAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICB9LFxyXG4gICAgICBhZGRyOiB7XHJcbiAgICAgICAgcmVzdGZ1bDogbmV3IFJlc3RmdWwoJ2FkZHJlc3MnKSxcclxuICAgICAgICBxdWVyeU9mTXk6ICdhZGRyZXNzL215JywgICAgICAgICAgICAgICAgICAgLy8g6I635Y+W5Zyw5Z2A5L+h5oGvIOWPguaVsCB7dXNlcmlkOiAnVTAwMDAwMDAwMSd9ICBcclxuICAgICAgfSxcclxuICAgICAgYXV0aDoge1xyXG4gICAgICAgIGxvZ2luOiAnYXV0aC9sb2dpbi93eCcsICAgICAgICAgICAgICAgICAgICAgIC8vIOeZu+W9lSAgICAgIFxyXG4gICAgICAgIHJlZnJlc2g6ICdhdXRoL3JlZnJlc2gnXHJcbiAgICAgIH0sXHJcbiAgICAgIHVzZXI6IHtcclxuICAgICAgICByZXN0ZnVsOiBuZXcgUmVzdGZ1bCgndXNlcicpXHJcbiAgICAgIH1cclxufSJdfQ==
