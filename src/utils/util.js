"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function formatTime(date, type) {
    if (type === void 0) { type = 1; }
    var year = date.getFullYear();
    var month = date.getMonth() + 1;
    var day = date.getDate();
    var hour = date.getHours();
    var minute = date.getMinutes();
    var second = date.getSeconds();
    if (type === 1) {
        return [year, month, day].map(formatNumber).join('/') + ' ' + [hour, minute, second].map(formatNumber).join(':');
    }
    else {
        return [hour, minute, second].map(formatNumber).join(':');
    }
}
exports.formatTime = formatTime;
var formatNumber = function (n) {
    var str = n.toString();
    return str[1] ? str : '0' + str;
};
exports.transExpiresDt = function (expires) {
    return new Date().valueOf() + (expires - 5) * 1000;
};
exports.isEmpty = function (n) {
    if (Object.prototype.toString.call(n) === '[object Object]') {
        if (JSON.stringify(n) !== '{}' || Object.keys(n).length > 0)
            return false;
    }
    else if (Object.prototype.toString.call(n) === '[object Array]') {
        if (n.length > 0)
            return false;
    }
    else {
        if (n != "" && n != null && n != undefined)
            return false;
    }
    return true;
};
exports.transDistance = function (len) {
    if (!len || Math.abs(len) <= 0.000001) {
        return "0m";
    }
    if (len < 1000) {
        return len.toFixed(2) + 'm';
    }
    else {
        return (Math.round(len / 100) / 10).toFixed(1) + "km";
    }
};
exports.getPageUrl = function () {
    var pages = getCurrentPages();
    var currentPage = pages[pages.length - 1];
    return currentPage.route;
};
exports.transDate = function (date) {
    var dt = new Date(date);
    var days = parseInt(((new Date().getTime() - dt.getTime()) / 86400000).toString());
    var t_d = new Date().getDate();
    var year = dt.getFullYear();
    var month = dt.getMonth() + 1;
    var day = dt.getDate();
    var time = dt.getHours() < 10 ? "0" + dt.getHours() : dt.getHours();
    var min = dt.getMinutes() < 10 ? "0" + dt.getMinutes() : dt.getMinutes();
    var result;
    var offset = Math.abs(t_d - day);
    if (days < 4 && offset < 4) {
        if (offset === 0) {
            result = "今天" + time + ":" + min;
        }
        else if (offset === 1) {
            result = "昨天" + time + ":" + min;
        }
        else if (offset === 2) {
            result = "前天" + time + ":" + min;
        }
    }
    else {
        result = year + "-" + month + "-" + day + " " + time + ":" + min;
    }
    return result;
};
//# sourceMappingURL=data:application/json;base64,